# --------------- CC386 configuration --------------
# --- general --------------------------------------
# $P  - project name
# $Pp - path to project directory
# $Pn - project name
# --- compile --------------------------------------
# $I  - input full name
# $Ip - input path
# $In - input name
# $Ie - input extension
# $O  - output file
# $Op - path to output file
# $On - output filename (without path)
# $Oe - output extension
# $R  - release/debug setting for compiler
# --- build ----------------------------------------
# $T  - target full name
# $Tp - target path
# $Tn - target name
# $O  - output file
# $Op - path to output file
# $On - output filename (without path)
# $Oe - output extension
# $R  - release/debug setting for linker

[Settings]

Target = 
Category&01 = DEFAULT RUN CONFIGURATION
Working Directory =.
Command Line Arguments =
Category&02 = COMPILER OPTIONS
Header Align = yes|no
Buffer Size = 32768
Checksum = no|yes
Intrinsic Functions = no|yes
ANSI = disable|enable
Translating trigraphs = disable|enable
Underscores = yes|no
Libraries = clwin.lib climp.lib
Excluded Files = Excludes
Compiler Options = 
Linker Options = 
Debugger=GRDB
External Dependencies=yes|no

[SettingsInfo]
Target = Provides a space for you to specify an output file and location of the program that the linker creates.
Working Directory = Provides a space for you to specify the directory in which executing occurs. If you do not specify a directory, executing occurs in the directory where the executable is located.
Command Line Arguments = Provides a space for you to specify command-line arguments you want to pass to the program at startup.
Header Align = Align EXE header to paragraph boundary.
Buffer Size = Set I/O buffersize (512 - 65,024 bytes).
Checksum = Compute checksum in .EXE header file.
Intrinsic Functions = Inline intrinsic functions instead of calling the RTL.
ANSI = By default the compiler allows several extensions to ansi, to make coding easier.  If you want strict adherance to ansi, enable it.
Translating trigraphs = Translates any trigraphs in the text.
Underscores = Normal C language procedure is to prepend each identifier with an underscore.  If you want to use the compiler to generate function and variable names without an underscore, set "no".
Libraries = Provides a space for you to specify an object file or standard library (either static or import) to pass to the linker. Separate file names with a space.
Excluded Files = This will exclude the file(s) included in this UE project group from the build.
Compiler Options = Provides a space for you to specify an additional compiler options.
Linker Options = Provides a space for you to specify an additional linker options.
Debugger=Provides a space for you to set the debugger you want to use to debug application.
External Dependencies=If you select "yes" option, UE Studio will generate in project group "External Dependencies" from included files.

[SettingsReps]

Header Align = yes=/AH|no=
Checksum = no=|yes=/EXechecksum
Intrinsic Functions = no=|yes=/O+i
ANSI = disable=|enable=+A
Translating trigraphs = disable=|enable=/T
Underscores = yes=|no=/C-m
External Dependencies=yes=1|no=0

[Variables]

CPATH =C:\CC386
COPT = /c $(Intrinsic Functions) $(ANSI) $(Translating trigraphs) $(Compiler Options)
LOPT = /PE /WIN $(Header Align) /BSZ:$(Buffer Size) $(Linker Options)
LOBJ = c0win.obj


[Environment]

PATH = $(CPATH)\BIN;%PATH%
CCINCL = $(CPATH)\INCLUDE
INCLUDE = $(CPATH)\INCLUDE
LIB = $(CPATH)\LIB

[General]

TargetExt = .EXE
ReleaseOut = Release
DebugOut = Debug
UseFullPaths = 0
UseDosNames = 0
Excludes = $(Excluded Files)

.CPP=.C
.CXX=.C
.CC=.C
GenerateEDGroup=$(External Dependencies)

[MakeCommands]

run = Execute Application
debug=Start Debugger
peview=PEview
makef=Show Makefile

[Execute Application]

Title = Execute $T
Cmd0 = $(Command Line Arguments)
Depends = $T
ShowWindow = 1
DisplayConsole = 0

[Start Debugger]
Title=Debug $T
Cmd0=$(Debugger) $T
Depends=$T
ShowWindow=1

[InsertFiles]

group0 = $(Libraries)

[FileGroups]

FGO = .obj;
FGR = .res;
FGL = .lib;

[GroupFormats]

FGO = %s
FGL = %s
FGR = %s

[Build]

Out = $T
Depends = $FGO $FGR
ReleaseFlag = 
#DebugFlag = /DEB
Cmd0 = VALX /32 /NCI $R $(LOPT) $(LOBJ) $FGO,$T,$On,$FGL,$FGR,

[.C]

Out = $In.obj
ReleaseFlag = 
DebugFlag = +v /C+S
Cmd0 = CC386 $(COPT) $R /o$O $I

IncFiles = 1
CaseSensitive = 1
IncDirs = .;$(INCLUDE);
IncKeyWords = #include;
Comments = /*.*/.//.eol.

[.RC]

Out = $In.res
Cmd0 = XRC /fo$O $I

[.ASM]

Out = $In.obj
Cmd0 = NASM -f obj -i$Ip -o$O $I
[PEview]
Title=Show PE Information
Depends=$T
Cmd0=uetools -pe $T
ShowWindow=1
DisplayConsole=0
[Show Makefile]
Title=Show makefile
Cmd0=uestudio $(UESMAKEFILE)
ShowWindow=1
DisplayConsole=0
