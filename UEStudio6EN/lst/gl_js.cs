namespace DHTML {
	/* methods */
	FORM.reset();
	FORM.submit();
	MARQUEE.start();
	MARQUEE.stop();
	TABLE.createCaption();
	TABLE.createTFoot();
	TABLE.createTHead();
	TABLE.deleteCaption();
	TABLE.firstPage();
	TABLE.lastPage();
	TABLE.nextPage();
	TABLE.previousPage();
	TABLE.refresh();
	TBODY.deleteTFoot();
	TBODY.deleteTHead();
	TR.deleteCell([iIndex]);
	TR.insertCell([iIndex]);
	TextNode.splitText([iIndex]);
	TextRange.collapse([bStart]);
	TextRange.compareEndPoints(sType, oRange);
	TextRange.duplicate();
	TextRange.expand(sUnit);
	TextRange.findText(sText [, iSearchScope] [, iFlags]);
	TextRange.getBookmark();
	TextRange.inRange(oRange);
	TextRange.isEqual(oCompareRange);
	TextRange.move(sUnit [, iCount]);
	TextRange.moveEnd(sUnit [, iCount]);
	TextRange.moveStart(sUnit [, iCount]);
	TextRange.moveToBookmark(sBookmark);
	TextRange.moveToElementText(oElement);
	TextRange.moveToPoint(iX, iY);
	TextRange.parentElement();
	TextRange.pasteHTML(sHTMLText);
	TextRange.setEndPoint(sType, oTextRange);
	body.createControlRange();
	document.clear();
	document.close();
	document.createElement(sTag);
	document.createEventObject([oExistingEvent]);
	document.createStyleSheet([sURL] [, iIndex]);
	document.createTextNode([sText]);
	document.elementFromPoint(iX, iY);
	document.getElementById(sIDValue);
	document.getElementsByName(sNameValue);
	document.open(sMimeType [, sReplace]);
	document.recalc([bForceAll]);
	document.write(sText);
	document.writeln(sText);
	external.AddFavorite(sURL [, sTitle]);
	history.back([iDistance]);
	history.forward();
	history.go(vLocation);
	location.assign(sURL);
	location.reload([bReloadSource]);
	location.replace(sURL);
	namespace.doImport(sUrl);
	namespaces.add(sNamespace, sUrn [, sUrl]);
	object.swapNode(oNode);
	object.add(oElement [, iIndex]);
	object.addBehavior(sUrl);
	object.appendChild(oNode);
	object.applyElement(oNewElement [, sWhere]);
	object.attachEvent(sEvent, fpNotify);
	object.blur();
	object.clearAttributes();
	object.clearData([sDataFormat]);
	object.click();
	object.cloneNode([bCloneChildren]);
	object.componentFromPoint(iCoordX, iCoordY);
	object.contains(oElement);
	object.createTextRange();
	object.deleteRow([iRowIndex]);
	object.detachEvent(sEvent, fpNotify);
	object.doScroll([sScrollAction]);
	object.dragDrop();
	object.execCommand(sCommand [, bUserInterface] [, vValue]);
	object.fireEvent(sEvent [, oEventObject]);
	object.focus();
	object.getAdjacentText(sWhere);
	object.getAttribute(sAttrName [, iFlags]);
	object.getBoundingClientRect();
	object.getClientRects();
	object.getData(sDataFormat);
	object.getElementsByTagName(sTagName);
	object.getExpression(sPropertyName);
	object.hasChildNodes();
	object.hasFocus();
	object.insertAdjacentElement(sWhere, oElement);
	object.insertAdjacentHTML(sWhere, sText);
	object.insertAdjacentText(sWhere, sText);
	object.insertBefore(oNewNode [, oChildNode]);
	object.insertRow([iIndex]);
	object.item(vIndex [, iSubindex]);
	object.item(vIndex);
	object.javaEnabled();
	object.mergeAttributes(oSource [, bPreserve]);
	object.moveRow(iSource, iTarget);
	object.namedRecordset([sQualifier] [, sSubChapter]);
	object.queryCommandEnabled(sCmdID);
	object.queryCommandIndeterm(sCmdID);
	object.queryCommandState(sCmdID);
	object.queryCommandSupported(sCmdID);
	object.queryCommandValue(sCmdID);
	object.releaseCapture();
	object.remove(iIndex);
	object.removeAttribute(sName [, iCaseSensitive]);
	object.removeBehavior(iID);
	object.removeChild(oNode);
	object.removeExpression(sPropertyName);
	object.removeNode([bRemoveChildren]);
	object.replaceAdjacentText(sWhere, sReplaceText);
	object.replaceChild(oNewNode, oChildNode);
	object.replaceNode(oNewNode);
	object.scrollIntoView([bAlignToTop]);
	object.select();
	object.setActive();
	object.setAttribute(sName, vValue [, iFlags]);
	object.setCapture([bContainerCapture]);
	object.setData(sDataFormat, sData);
	object.setExpression(sPropertyName, sExpression, sLanguage);
	object.tags(sTag);
	object.taintEnabled();
	object.vcard_name(sVCard);
	object.urns(sUrn);
	popup.hide();
	popup.show(iX, iY, iWidth, iHeight [, oElement]);
	selection.clear();
	selection.createRange();
	selection.createRangeCollection();
	selection.empty();
	styleSheet.addImport(sURL [, iIndex]);
	styleSheet.addRule(sSelector, sStyle [, iIndex]);
	styleSheet.removeRule([iIndex]);
	userProfile.addReadRequest(sAttributeName [, vReserved]);
	userProfile.clearRequest();
	userProfile.doReadRequest(vUsageCode [, vFriendlyName] [, vDomain] [, vPath] [, vExpiration] [, vReserved]);
	userProfile.getAttribute(sAttributeName);
	window.alert([sMessage]);
	window.clearInterval(iIntervalID);
	window.clearTimeout(iTimeoutID);
	window.close();
	window.confirm([sMessage]);
	window.createPopup([vArgs]);
	window.execScript(sExpression, sLanguage);
	window.external.AddChannel(sURLToCDF);
	window.external.AddDesktopComponent(sURL, sType [, iLeft, iTop, iWidth, iHeight]);
	window.external.AutoCompleteSaveForm(oForm);
	window.external.AutoScan(sUserQuery [, sURL, sTarget]);
	window.external.ImportExportFavorites(bImportExport [, sImportExportPath]);
	window.external.IsSubscribed(sURLToCDF);
	window.external.NavigateAndFind(sLocation, sQuery, sTargetFrame);
	window.external.ShowBrowserUI(sUI, _null);
	window.moveBy(iX, iY);
	window.moveTo(iX, iY);
	window.navigate(sURL);
	window.open([sURL] [, sName] [, sFeatures] [, bReplace]);
	window.print();
	window.prompt([sMessage] [, sDefaultValue]);
	window.resizeBy(iX, iY);
	window.resizeTo(iWidth, iHeight);
	window.scroll(iX, iY);
	window.scrollBy(iX, iY);
	window.scrollTo(iX, iY);
	window.setInterval(vCode, iMilliSeconds [, sLanguage]);
	window.setTimeout(vCode, iMilliSeconds [, sLanguage]);
	window.showHelp(sURL [, vContextID]);
	window.showModalDialog(sURL [, vArguments] [, sFeatures]);
	window.showModelessDialog(sURL [, vArguments] [, sFeatures]);
	/* properties */
	A.Methods {};
	AREA.coords {};
	AREA.noHref {};
	AREA.shape {};
	Attribute.specified{};
	BASE.href {};
	BGSOUND.balance {};
	BGSOUND.src {};
	BGSOUND.volume{};
	BR.clear {};
	BUTTON.type{};
	CAPTION.vAlign {};
	DL.compact {};
	EMBED.hidden {};
	EMBED.palette{};
	EMBED.pluginspage{};
	EMBED.units {};
	FORM.action {};
	FORM.encoding {};
	FORM.method {};
	FRAME.noResize {};
	FRAMESET.border {};
	FRAMESET.cols {};
	FRAMESET.frameSpacing {};
	FRAMESET.rows {};
	HR.noShade {};
	HR.size {};
	IMG.dynsrc {};
	IMG.fileUpdatedDate{};
	IMG.isMap {};
	IMG.lowsrc {};
	IMG.start {};
	IMG.useMap {};
	INPUT type=checkbox.indeterminate {};
	INPUT type=file.value{};
	LABEL.htmlFor {};
	LI.value {};
	LINK.title {};
	MARQUEE.behavior {};
	MARQUEE.direction {};
	MARQUEE.loop {};
	MARQUEE.scrollAmount {};
	MARQUEE.scrollDelay {};
	MARQUEE.trueSpeed {};
	META.content {};
	META.httpEquiv {};
	META.name {};
	OBJECT.classid {};
	OBJECT.codeType {};
	OBJECT.data {};
	OBJECT.type {};
	OL.start {};
	OPTION.defaultSelected {};
	OPTION.index {};
	OPTION.selected {};
	OPTION.text {};
	RUBY.style.rubyAlign {};
	RUBY.style.rubyOverhang {};
	RUBY.style.rubyPosition {};
	SCRIPT.defer {};
	SCRIPT.htmlFor {};
	SCRIPT.src {};
	SCRIPT.type {};
	SELECT.multiple {};
	SELECT.selectedIndex {};
	SELECT.type{};
	TABLE.align {};
	TABLE.caption{};
	TABLE.cellPadding {};
	TABLE.cellSpacing {};
	TABLE.cols {};
	TABLE.dataPageSize {};
	TABLE.frame {};
	TABLE.rules {};
	TABLE.tFoot{};
	TABLE.tHead{};
	TD.cellIndex{};
	TEXTAREA.cols {};
	TEXTAREA.rows {};
	TEXTAREA.type{};
	TEXTAREA.value {};
	TR.rowIndex{};
	TR.sectionRowIndex{};
	TextNode.data {};
	TextNode.length{};
	TextRange.boundingHeight{};
	TextRange.boundingLeft{};
	TextRange.boundingTop{};
	TextRange.boundingWidth{};
	TextRange.htmlText{};
	TextRange.text {};
	TextRectangle.bottom {};
	TextRectangle.left {};
	TextRectangle.right {};
	TextRectangle.top {};
	body.aLink {};
	body.background {};
	body.bgProperties {};
	body.bottomMargin {};
	body.leftMargin {};
	body.link {};
	body.rightMargin {};
	body.scroll {};
	body.text {};
	body.topMargin {};
	body.vLink {};
	currentStyle.clipBottom{};
	currentStyle.clipLeft{};
	currentStyle.clipRight{};
	currentStyle.clipTop{};
	dataTransfer.dropEffect {};
	dataTransfer.effectAllowed {};
	defaults.tabStop {};
	defaults.viewInheritStyle {};
	defaults.viewLink {};
	defaults.viewMasterTab {};
	document.URL {};
	document.URLUnencoded{};
	document.XSLDocument{};
	document.aLinkColor {};
	document.activeElement{};
	document.cookie {};
	document.designMode {};
	document.documentElement{};
	document.domain {};
	document.expando {};
	document.fgColor {};
	document.lastModified{};
	document.linkColor {};
	document.media {};
	document.parentWindow{};
	document.referrer{};
	document.vlinkColor {};
	event.altKey {};
	event.altLeft {};
	event.button {};
	event.cancelBubble {};
	event.clientX {};
	event.clientY {};
	event.ctrlKey {};
	event.ctrlLeft {};
	event.dataFld {};
	event.fromElement {};
	event.keyCode {};
	event.offsetX {};
	event.offsetY {};
	event.propertyName {};
	event.qualifier {};
	event.reason {};
	event.repeat {};
	event.returnValue {};
	event.saveType{};
	event.screenX {};
	event.screenY {};
	event.shiftKey {};
	event.shiftLeft {};
	event.srcElement {};
	event.srcFilter {};
	event.srcUrn {};
	event.toElement {};
	event.type {};
	event.x {};
	event.y {};
	external.menuArguments{};
	location.href {};
	namespace.name {};
	object.STYLE{};
	object.XMLDocument{};
	object.accessKey {};
	object.align {};
	object.allowTransparency {};
	object.alt {};
	object.altHTML {};
	object.appCodeName{};
	object.appMinorVersion{};
	object.appName{};
	object.appVersion{};
	object.autocomplete {};
	object.background {};
	object.bgColor {};
	object.border {};
	object.borderColor {};
	object.borderColorDark {};
	object.borderColorLight {};
	object.browserLanguage{};
	object.canHaveChildren{};
	object.canHaveHTML{};
	object.checked {};
	object.className {};
	object.clientHeight{};
	object.clientLeft{};
	object.clientTop{};
	object.clientWidth{};
	object.code {};
	object.codeBase {};
	object.colSpan {};
	object.color {};
	object.complete{};
	object.contentEditable {};
	object.contentWindow{};
	object.cookieEnabled{};
	object.cpuClass{};
	object.cssText {};
	object.currentStyle.hasLayout{};
	object.dataFld {};
	object.dataFormatAs {};
	object.dataSrc {};
	object.defaultCharset {};
	object.defaultChecked {};
	object.defaultValue {};
	object.dir {};
	object.disabled {};
	object.face {};
	object.fileCreatedDate{};
	object.fileModifiedDate{};
	object.fileSize{};
	object.firstChild{};
	object.form{};
	object.frameBorder {};
	object.hash {};
	object.height {};
	object.hideFocus {};
	object.host {};
	object.hostname {};
	object.href {};
	object.hspace {};
	object.id {};
	object.innerHTML {};
	object.innerText {};
	object.isContentEditable{};
	object.isDisabled{};
	object.isTextEdit{};
	object.lang {};
	object.language {};
	object.lastChild{};
	object.length{};
	object.loop {};
	object.marginHeight {};
	object.marginWidth {};
	object.maxLength {};
	object.media {};
	object.name {};
	object.nameProp{};
	object.nextSibling{};
	object.noWrap {};
	object.nodeName{};
	object.nodeType{};
	object.nodeValue {};
	object.offsetHeight{};
	object.offsetLeft{};
	object.offsetParent{};
	object.offsetTop{};
	object.offsetWidth{};
	object.onLine{};
	object.outerHTML {};
	object.outerText {};
	object.parentElement{};
	object.parentNode{};
	object.parentTextEdit{};
	object.pathname {};
	object.platform{};
	object.port {};
	object.previousSibling{};
	object.protocol {};
	object.readOnly{};
	object.readOnly {};
	object.readyState{};
	object.recordNumber{};
	object.recordset {};
	object.rel {};
	object.rev {};
	object.rowSpan {};
	object.scopeName{};
	object.scrollHeight{};
	object.scrollLeft {};
	object.scrollTop {};
	object.scrollWidth{};
	object.scrolling {};
	object.search {};
	object.self{};
	object.size {};
	object.sourceIndex{};
	object.span {};
	object.src {};
	object.status {};
	object.style.background {};
	object.style.backgroundAttachment {};
	object.style.backgroundColor {};
	object.style.backgroundImage {};
	object.style.backgroundPosition {};
	object.style.backgroundPositionX {};
	object.style.backgroundPositionY {};
	object.style.backgroundRepeat {};
	object.style.behavior {};
	object.style.border {};
	object.style.borderBottom {};
	object.style.borderBottomColor {};
	object.style.borderBottomStyle {};
	object.style.borderBottomWidth {};
	object.style.borderCollapse {};
	object.style.borderColor {};
	object.style.borderLeft {};
	object.style.borderLeftColor {};
	object.style.borderLeftStyle {};
	object.style.borderLeftWidth {};
	object.style.borderRight {};
	object.style.borderRightColor {};
	object.style.borderRightStyle {};
	object.style.borderRightWidth {};
	object.style.borderStyle {};
	object.style.borderTop {};
	object.style.borderTopColor {};
	object.style.borderTopStyle {};
	object.style.borderTopWidth {};
	object.style.borderWidth {};
	object.style.bottom {};
	object.style.clear {};
	object.style.clip {};
	object.style.color {};
	object.style.cursor {};
	object.style.direction {};
	object.style.display {};
	object.style.filter {};
	object.style.font {};
	object.style.fontFamily {};
	object.style.fontSize {};
	object.style.fontStyle {};
	object.style.fontVariant {};
	object.style.fontWeight {};
	object.style.height {};
	object.style.imeMode {};
	object.style.layoutFlow {};
	object.style.layoutGrid {};
	object.style.layoutGridChar {};
	object.style.layoutGridCharSpacing {};
	object.style.layoutGridLine {};
	object.style.layoutGridMode {};
	object.style.layoutGridType {};
	object.style.left {};
	object.style.letterSpacing {};
	object.style.lineBreak {};
	object.style.lineHeight {};
	object.style.listStyle {};
	object.style.listStyleImage {};
	object.style.listStylePosition {};
	object.style.listStyleType {};
	object.style.margin {};
	object.style.marginBottom {};
	object.style.marginLeft {};
	object.style.marginRight {};
	object.style.marginTop {};
	object.style.overflow {};
	object.style.overflowX {};
	object.style.overflowY {};
	object.style.padding {};
	object.style.paddingBottom {};
	object.style.paddingLeft {};
	object.style.paddingRight {};
	object.style.paddingTop {};
	object.style.pageBreakAfter {};
	object.style.pageBreakBefore {};
	object.style.pixelBottom {};
	object.style.pixelHeight {};
	object.style.pixelLeft {};
	object.style.pixelRight {};
	object.style.pixelTop {};
	object.style.pixelWidth {};
	object.style.posBottom {};
	object.style.posHeight {};
	object.style.posLeft {};
	object.style.posRight {};
	object.style.posTop {};
	object.style.posWidth {};
	object.style.position {};
	object.style.right {};
	object.style.scrollbar3dLightColor {};
	object.style.scrollbarArrowColor {};
	object.style.scrollbarBaseColor {};
	object.style.scrollbarDarkShadowColor {};
	object.style.scrollbarFaceColor {};
	object.style.scrollbarHighlightColor {};
	object.style.scrollbarShadowColor {};
	object.style.styleFloat {};
	object.style.tableLayout {};
	object.style.textAlign {};
	object.style.textAlignLast {};
	object.style.textAutospace {};
	object.style.textDecoration {};
	object.style.textDecorationLineThrough {};
	object.style.textDecorationNone {};
	object.style.textDecorationOverline {};
	object.style.textDecorationUnderline {};
	object.style.textIndent {};
	object.style.textJustify {};
	object.style.textKashidaSpace {};
	object.style.textTransform {};
	object.style.textUnderlinePosition {};
	object.style.top {};
	object.style.unicodeBidi {};
	object.style.verticalAlign {};
	object.style.visibility {};
	object.style.whiteSpace {};
	object.style.width {};
	object.style.wordBreak {};
	object.style.wordSpacing {};
	object.style.wordWrap {};
	object.style.writingMode {};
	object.style.zIndex {};
	object.style.zoom {};
	object.systemLanguage{};
	object.tabIndex {};
	object.tagName{};
	object.tagUrn {};
	object.target {};
	object.text {};
	object.title {};
	object.type {};
	object.uniqueID{};
	object.urn {};
	object.userAgent{};
	object.userLanguage{};
	object.vAlign {};
	object.value {};
	object.vspace {};
	object.width {};
	object.wrap {};
	popup.document{};
	popup.isOpen{};
	rule.selectorText {};
	screen.availHeight{};
	screen.availWidth{};
	screen.bufferDepth {};
	screen.colorDepth{};
	screen.fontSmoothingEnabled{};
	screen.height{};
	screen.updateInterval {};
	screen.width{};
	selection.type{};
	selection.typeDetail{};
	style.type {};
	styleSheet.disabled {};
	styleSheet.href {};
	styleSheet.owningElement{};
	styleSheet.parentStyleSheet{};
	styleSheet.type{};
	window.closed{};
	window.defaultStatus {};
	window.dialogArguments{};
	window.dialogHeight {};
	window.dialogLeft {};
	window.dialogTop {};
	window.dialogWidth {};
	window.frameElement{};
	window.offscreenBuffering {};
	window.opener {};
	window.parent{};
	window.returnValue {};
	window.screenLeft{};
	window.screenTop{};
	window.status {};
	window.top{};
	/* events */
	event onabort;
	event onactivate;
	event onafterprint;
	event onafterupdate;
	event onbeforecopy;
	event onbeforecut;
	event onbeforedeactivate;
	event onbeforeeditfocus;
	event onbeforefocusenter;
	event onbeforefocusleave;
	event onbeforepaste;
	event onbeforeprint;
	event onbeforeunload;
	event onbeforeupdate;
	event onblur;
	event onbounce;
	event oncellchange;
	event onchange;
	event onclick;
	event oncontextmenu;
	event oncontrolselect;
	event oncopy;
	event oncut;
	event ondataavailable;
	event ondatasetchanged;
	event ondatasetcomplete;
	event ondblclick;
	event ondeactivate;
	event ondrag;
	event ondragend;
	event ondragenter;
	event ondragleave;
	event ondragover;
	event ondragstart;
	event ondrop;
	event onerror;
	event onerrorupdate;
	event onfilterchange;
	event onfinish;
	event onfocus;
	event onfocusenter;
	event onfocusleave;
	event onhelp;
	event onkeydown;
	event onkeypress;
	event onkeyup;
	event onlayoutcomplete;
	event onload;
	event onlosecapture;
	event onmousedown;
	event onmouseenter;
	event onmouseleave;
	event onmousemove;
	event onmouseout;
	event onmouseover;
	event onmouseup;
	event onpaste;
	event onpropertychange;
	event onreadystatechange;
	event onreset;
	event onresize;
	event onresizeend;
	event onresizestart;
	event onrowenter;
	event onrowexit;
	event onrowsdelete;
	event onrowsinserted;
	event onscroll;
	event onselect;
	event onselectionchange;
	event onselectiontypechange;
	event onselectstart;
	event onstart;
	event onstop;
	event onsubmit;
	event onunload;
	/* collections */
	FORM.elements {};
	FORM.elements(vIndex [, iSubIndex]);
	MAP.areas {};
	MAP.areas(vIndex [, iSubIndex]);
	SELECT.options {};
	SELECT.options(vIndex [, iSubIndex]);
	TABLE.tBodies {};
	TABLE.tBodies(vIndex [, iSubIndex]);
	document.anchors {};
	document.anchors(vIndex [, iSubIndex]);
	document.applets {};
	document.applets(vIndex [, iSubIndex]);
	document.embeds {};
	document.embeds(vIndex [, iSubIndex]);
	document.forms {};
	document.forms(vIndex [, iSubIndex]);
	document.images {};
	document.images(vIndex [, iSubIndex]);
	document.links {};
	document.links(iIndex);
	document.namespaces {};
	document.namespaces(vIndex [, iSubIndex]);
	document.scripts {};
	document.scripts(vIndex [, iSubIndex]);
	document.styleSheets {};
	document.styleSheets(vIndex [, iSubIndex]);
	event.bookmarks {};
	event.bookmarks(iIndex);
	event.boundElements {};
	event.boundElements(vIndex [, iSubIndex]);
	object.all {};
	object.all(vIndex [, iSubIndex]);
	object.attributes {};
	object.attributes(iIndex);
	object.behaviorUrns {};
	object.behaviorUrns(iIndex);
	object.cells {};
	object.cells(vIndex [, iSubIndex]);
	object.childNodes {};
	object.childNodes(vIndex [, iSubIndex]);
	object.children {};
	object.children(vIndex [, iSubIndex]);
	object.filters {};
	object.filters(vIndex [, iSubIndex]);
	object.frames {};
	object.frames(vIndex [, iSubIndex]);
	object.plugins {};
	object.plugins(iIndex);
	object.rows {};
	object.rows(vIndex [, iSubIndex]);
	selection.TextRange {};
	selection.TextRange(vIndex [, iSubIndex]);
	styleSheet.imports {};
	styleSheet.imports(iIndex);
	styleSheet.rules {};
	styleSheet.rules(iIndex);
}

namespace JScript {
	/* methods */
	Date.UTC(year, month, day[, hours[, minutes[, seconds[,ms]]]]);
	Date.parse(dateVal);
	Math.abs(number);
	Math.acos(number);
	Math.asin(number);
	Math.atan(number);
	Math.atan2(y, x);
	Math.ceil(number);
	Math.cos(number);
	Math.exp(number);
	Math.floor(number);
	Math.log(number);
	Math.max([number1[, number2[...[, numberN]]]]);
	Math.min([number1[, number2[...[,numberN]]]]);
	Math.pow(base, exponent);
	Math.random();
	Math.round(number);
	Math.sin(number);
	Math.sqrt(number);
	Math.tan(number);
	array.dimensions();
	array1.concat([item1[, item2[,...[, itemN]]]]);
	arrayObj.join(separator);
	arrayObj.pop();
	arrayObj.push([item1 [item2 [. . . [itemN ]]]]);
	arrayObj.reverse();
	arrayObj.shift();
	arrayObj.slice(start, [end]);
	arrayObj.splice(start, deleteCount, [item1[, item2[,...[,itemN]]]]);
	arrayObj.unshift([item1[, item2 [,...[, itemN]]]]);
	arrayobj.sort(sortFunction);
	dateObj.getDate();
	dateObj.getDay();
	dateObj.getFullYear();
	dateObj.getHours();
	dateObj.getMilliseconds();
	dateObj.getMinutes();
	dateObj.getMonth();
	dateObj.getSeconds();
	dateObj.getTime();
	dateObj.getTimezoneOffset();
	dateObj.getUTCDate();
	dateObj.getUTCDay();
	dateObj.getUTCFullYear();
	dateObj.getUTCHours();
	dateObj.getUTCMilliseconds();
	dateObj.getUTCMinutes();
	dateObj.getUTCMonth();
	dateObj.getUTCSeconds();
	dateObj.getVarDate();
	dateObj.getYear();
	dateObj.setDate(numDate);
	dateObj.setFullYear(numYear[, numMonth[, numDate]]);
	dateObj.setHours(numHours[, numMin[, numSec[, numMilli]]]);
	dateObj.setMilliseconds(numMilli);
	dateObj.setMinutes(numMinutes[, numSeconds[, numMilli]]);
	dateObj.setMonth(numMonth[, dateVal]);
	dateObj.setSeconds(numSeconds[, numMilli]);
	dateObj.setTime(milliseconds);
	dateObj.setUTCDate(numDate);
	dateObj.setUTCFullYear(numYear[, numMonth[, numDate]]);
	dateObj.setUTCHours(numHours[, numMin[, numSec[, numMilli]]]);
	dateObj.setUTCMilliseconds(numMilli);
	dateObj.setUTCMinutes(numMinutes[, numSeconds[, numMilli]]);
	dateObj.setUTCMonth(numMonth[, dateVal]);
	dateObj.setUTCSeconds(numSeconds[, numMilli]);
	dateObj.setYear(numYear);
	dateObj.toGMTString();
	dateObj.toLocaleString();
	dateObj.toUTCString();
	enumObj.item();
	enumObj.moveFirst();
	enumObj.moveNext();
	numObj.toExponential([fractionDigits]);
	numObj.toFixed([fractionDigits]);
	numObj.toPrecision ([precision]);
	objDate.toDateString();
	objDate.toLocaleDateString();
	objDate.toLocaleTimeString();
	objDate.toTimeString();
	object.Add (folderName);
	object.Add (key, item);
	object.BuildPath(path, name);
	object.Close();
	object.Copy( destination[, overwrite] );
	object.CopyFile ( source, destination[, overwrite] );
	object.CopyFolder ( source, destination[, overwrite] );
	object.CreateFolder(foldername);
	object.CreateTextFile(filename[, overwrite[, unicode]]);
	object.Delete( force );
	object.DeleteFile ( filespec[, force] );
	object.DeleteFolder ( folderspec[, force] );
	object.DriveExists(drivespec);
	object.Exists(key);
	object.FileExists(filespec);
	object.FolderExists(folderspec);
	object.GetAbsolutePathName(pathspec);
	object.GetBaseName(path);
	object.GetDrive ( drivespec );
	object.GetDriveName(path);
	object.GetExtensionName(path);
	object.GetFile(filespec);
	object.GetFileName(pathspec);
	object.GetFileVersion(pathspec);
	object.GetFolder(folderspec);
	object.GetParentFolderName(path);
	object.GetSpecialFolder(folderspec);
	object.GetTempName ();
	object.Items();
	object.Keys();
	object.Move( destination );
	object.MoveFile ( source, destination );
	object.MoveFolder ( source, destination );
	object.OpenAsTextStream([iomode, [format]]);
	object.OpenTextFile(filename[, iomode[, create[, format]]]);
	object.Read(characters);
	object.ReadAll();
	object.ReadLine();
	object.Remove(key);
	object.RemoveAll();
	object.Skip(characters);
	object.SkipLine();
	object.Write(string);
	object.WriteBlankLines(lines);
	object.WriteLine([string]);
	object.hasOwnProperty(proName);
	object.valueOf();
	object.isPrototypeOf(object2);
	object.Item(key);
	object.Key(key);
	object.propertyIsEnumerable(proName);
	objectname.toString([radix]);
	global.parseFloat(numString);
	global.parseInt(numString, [radix]);
	rgExp.compile(pattern, [flags]);
	rgExp.exec(str);
	rgExp.test(str);
	Array.getItem(dimension1[, dimension2, ...], dimensionN);
	Array.lbound(dimension);
	Array.toArray();
	Array.ubound(dimension);
	String.fromCharCode([code1[, code2[, ...[, codeN]]]]);
	String.charAt(index);
	String.charCodeAt(index);
	String.indexOf(subString[, startIndex]);
	String.lastIndexOf(substring[, startindex]);
	strVariable.anchor(anchorString);
	strVariable.big();
	strVariable.blink();
	strVariable.bold();
	strVariable.fixed();
	strVariable.fontcolor(colorVal);
	strVariable.fontsize(intSize);
	strVariable.italics();
	strVariable.link(linkstring);
	strVariable.small();
	strVariable.strike();
	strVariable.sub();
	strVariable.substring(start, end);
	strVariable.sup();
	strVariable.toLowerCase();
	strVariable.toUpperCase();
	string.concat([string2[, string3[,...[, stringN]]]]);
	stringObj.match(rgExp);
	stringObj.replace(rgExp, replaceText);
	stringObj.search(rgExp);
	stringObj.slice(start, [end]);
	stringObj.split([separator[, limit]]);
	stringVar.localeCompare(stringExp);
	stringVar.tolocaleLowerCase();
	stringVar.tolocaleUpperCase();
	stringvar.substr(start [, length ]);
	global.apply([thisObj[,argArray]]);
	global.call([thisObj[, arg1[, arg2[, [, argN]]]]]);
	global.unescape(charString);
	global.decodeURI(URIstring);
	global.decodeURIComponent(encodedURIString);
	global.encodeURI(URIString);
	global.encodeURIComponent(encodedURIString);
	global.escape(charString);
	global.eval(codeString);
	global.isFinite(number);
	global.isNaN(numValue);
	global.GetObject([pathname] [, class]);
	global.ScriptEngine();
	global.ScriptEngineBuildVersion();
	global.ScriptEngineMajorVersion();
	global.ScriptEngineMinorVersion();
	/* propeties */
	Math.Infinity {};
	Math.E {};
	Math.LN10 {};
	Math.LN2 {};
	Math.LOG10E {};
	Math.LOG2E {};
	Math.PI {};
	Math.SQRT1_2 {};
	Math.SQRT2 {};
	Math.abs(x);
	Math.acos(x);
	Math.asin(x);
	Math.atan(x);
	Math.atan2(x,y);
	Math.ceil(x);
	Math.cos(x);
	Math.exp(x);
	Math.floor(x);
	Math.log(x);
	Math.max(x,y);
	Math.min(x,y);
	Math.pow(x,y);
	Math.random();
	Math.round(x);
	Math.sin(x);
	Math.sqrt(x);
	Math.tan(x);
	Math.NaN {};
	Number.MAX_VALUE {};
	Number.MIN_VALUE {};
	Number.NEGATIVE_INFINITY {};
	Number.NaN {};
	Number.POSITIVE_INFINITY {};
	RegExp.index {};
	RegExp.input {};
	RegExp.lastIndex {};
	RegExp.lastMatch {};
	RegExp.lastParen {};
	RegExp.leftContext {};
	RegExp.rightContext {};
	arguments.callee {};
	arguments.length {};
	arrayObj.length {};
	errorObj.message {};
	errorObj.name {};
	function.arguments {};
	functionName.caller {};
	functionName.length {};
	object.AtEndOfLine {};
	object.AtEndOfStream {};
	object.Attributes {};
	object.AvailableSpace {};
	object.Column {};
	object.CompareMode {};
	object.Count {};
	object.DateCreated {};
	object.DateLastAccessed {};
	object.DateLastModified {};
	object.Drive {};
	object.DriveLetter {};
	object.DriveType {};
	object.Drives {};
	object.FileSystem {};
	object.Files {};
	object.FreeSpace {};
	object.IsReady {};
	object.IsRootFolder {};
	object.Line {};
	object.Name {};
	object.ParentFolder {};
	object.Path {};
	object.RootFolder {};
	object.SerialNumber {};
	object.ShareName {};
	object.ShortName {};
	object.ShortPath {};
	object.Size {};
	object.SubFolders {};
	object.TotalSize {};
	object.Type {};
	object.VolumeName {};
	object.constructor {};
	object.description {};
	object.number {};
	objectName.prototype {};
	rgExp.global {};
	rgExp.ignoreCase {};
	rgExp.multiline {};
	rgExp.source {};
	strVariable.length {};
	global.undefined {};
}
