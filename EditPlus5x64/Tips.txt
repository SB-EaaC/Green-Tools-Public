EditPlus 2.12 使用技巧集萃 build2005.08.10   
                 
------------------------------------------------------
技巧中，基于平时我对EditPlus的摸索实践而成，在编译器集成例子中参照了部分官方的文献。有几篇是从网上搜集来的，这里我注明了来源或原始作者。如果你是相应作者，不希望文章放在这里，请通知我，我会及时删掉。        －－－－－Liangjh

自己写的一些里面，不见得有多大的技术含量，只是希望有时能够节省大家的一些时间
如果你有好的见解分享，请发邮件至 liang.yeah@yeah.net
------------------------------------------------------
文章或者技巧及原始作者或出处：

正则表达式类
【1】 正则表达式应用――替换指定内容到行尾
【2】 正则表达式应用――数字替换----------------------------Microshaoft@CCF,jiuk2k@CCF
【3】 正则表达式应用――删除每一行行尾的指定字符 
【4】 正则表达式应用――替换带有半角括号的多行
【5】 正则表达式应用――删除空行----------------------------江德华
软件技巧类
------------------------------------------------------
【6】 软件技巧――键盘记录的注意事项 
【7】 软件技巧――关闭文档标签的便捷方法 
【8】 软件技巧――如何去掉 EditPlus 保存文本文件时的添加后缀提示？
【9】 软件技巧――提示找不到语法文件的解决办法 
【10】软件技巧――设置editplus支持其它文字，如韩文----------jackywu1978@LJF
【11】软件技巧――FTP 上传的设置----------------------------李应文2.11汉化版
【12】软件技巧――如何禁用备份文件功能？
【13】软件技巧――添加语法文件、自动完成文件、以及剪辑库文件
工具集成类
------------------------------------------------------
【14】工具集成――编译器集成例子（Java、Borland C++、Visual C++、Inno Setup、nsis、C#）
【15】工具集成――让Editplus调试PHP程序----------------------avenger,aukw@CCF
【16】工具集成――打造 PHP 调试环境(二)----------------------老七2.11汉化版
【17】在 WINPE 中集成 EDITPLUS 
后续添加
------------------------------------------------------
【18】支持带UTF-8标记/不带UTF-8标记的文件
【19】建立文件关联，以便在资源管理器中双击打开对应语法文件
【20】特别应用，双击单词选择问题
【21】在Editplus中使用CVS版本控制功能---------------------sunbn@CCF
【22】EditPlus的移植与设置备份（更新）
【23】EditPlus原版安装程序的缺点以及自定义安装包

每个步骤都说得很详细了，就没有必要贴图了，体积不要太大才好。

【1】正则表达式应用――替换指定内容到行尾
原始文本如下面两行
abc aaaaa
123 abc 444

希望每次遇到“abc”，则替换“abc”以及其后到行尾的内容为“abc efg”
即上面的文本最终替换为：
abc efg
123 abc efg

解决：
① 在替换对话框，查找内容里输入“abc.*”
② 同时勾选“正则表达式”复选框，然后点击“全部替换”按钮
其中，符号的含义如下：
“.” ＝匹配任意字符
“*” ＝匹配0次或更多

注意：其实就是正则表达式替换，这里只是把一些曾经提出的问题加以整理，单纯从正则表达式本身来说，就可以引申出成千上万种特例。

【2】正则表达式应用――数字替换  （Microshaoft@CCF,jiuk2k@CCF）
希望把
asdadas123asdasdas456asdasdasd789asdasd
替换为:
asdadas[123]asdasdas[456]asdasdasd[789]asdasd

在替换对话框里面，勾选“正则表达式”复选框；
在查找内容里面输入“[0-9][0-9][0-9]”，不含引号
“替换为:”里面输入“[\0\1\2]”，不含引号
范围为你所操作的范围，然后选择替换即可。

实际上这也是正则表达式的使用特例，“[0-9]”表示匹配0～9之间的任何特例，同样“[a-z]”就表示匹配a～z之间的任何特例
上面重复使用了“[0-9]”，表示连续出现的三个数字
“\0”代表第一个“[0-9]”对应的原型，“\1”代表第二个“[0-9]”对应的原型，依此类推
“[”、“]”为单纯的字符，表示添加“[”或“]”，如果输入“其它\0\1\2其它”，则替换结果为：

asdadas其它123其它asdasdas其它456其它asdasdasd其它789其它asdasd

功能增强（by jiuk2k@CCF）：
如果将查找内容“[0-9][0-9][0-9]”改为“[0-9]*[0-9]”，对应1 或 123 或 12345 或 ...
大家根据需要定制

相关内容还有很多，可以自己参考正则表达式的语法仔细研究一下

【3】正则表达式应用――删除每一行行尾的指定字符 
因为这几个字符在行中也是出现的,所以肯定不能用简单的替换实现
比如
12345 1265345
2345
需要删除每行末尾的“345”
这个也算正则表达式的用法，其实仔细看正则表达式应该比较简单，不过既然有这个问题提出，说明对正则表达式还得有个认识过程，解决方法如下
解决：
在替换对话框中，启用“正则表达式”复选框
在查找内容里面输入“345$”
这里“$”表示从行尾匹配

如果从行首匹配，可以用“^”来实现，不过 EditPlus 有另一个功能可以很简单的删除行首的字符串
a. 选择要操作的行
b. 编辑－格式－删除行注释
c. 在弹出对话框里面输入要清除的行首字符，确定

【4】正则表达式应用――替换带有半角括号的多行
几百个网页中都有下面一段代码：
<SCRIPT LANGUAGE="JavaScript1.1">
<!--
htmlAdWH('93163607', '728', '90');
//-->
</SCRIPT>
我想把它们都去掉，可是找了很多search & replace的软件，都是只能对“一行”进行操作。 

EditPlus 打开几百个网页文件还是比较顺畅的，所以完全可以胜任这个工作。
具体解决方法，在 Editplus 中使用正则表达式，由于“(”、“)”被用做预设表达式（或者可以称作子表达式）的标志，所以查找
“<SCRIPT LANGUAGE="JavaScript1.1">\n<!--\nhtmlAdWH('93163607', '728', '90'.);\n//-->\n</SCRIPT>\n”
时会提示查找不到，所以也就无法进行替换了，这时可以把“(”、“)”使用任意字符标记替代，即半角句号：“.”。替换内容为
<SCRIPT LANGUAGE="JavaScript1.1">\n<!--\nhtmlAdWH.'93163607', '728', '90'.;\n//-->\n</SCRIPT>\n
在替换对话框启用“正则表达式”选项，这时就可以完成替换了

补充：（lucida@DRL）
对( ) 这样的特殊符号，应该用\( \)来表示，这也是很标准的regexp语法，可以写为
<SCRIPT LANGUAGE="JavaScript1.1">\n<!--\nhtmlAdWH\('93163607', '728', '90'\);\n//-->\n</SCRIPT>\n

【5】正则表达式应用――删除空行
启动EditPlus，打开待处理的文本类型文件。
①、选择“查找”菜单的“替换”命令，弹出文本替换对话框。选中“正则表达式”复选框，表明我们要在查找、替换中使用正则表达式。然后，选中“替换范围”中的“当前文件”，表明对当前文件操作。
②、单击“查找内容”组合框右侧的按钮，出现下拉菜单。
③、下面的操作添加正则表达式，该表达式代表待查找的空行。（技巧提示：空行仅包括空格符、制表符、回车符，且必须以这三个符号之一作为一行的开头，并且以回车符结尾，查找空行的关键是构造代表空行的正则表达式）。
直接在"查找"中输入正则表达式“^[ \t]*\n”，注意\t前有空格符。
（1）选择“从行首开始匹配”，“查找内容”组合框中出现字符“^”，表示待查找字符串必须出现在文本中一行的行首。
（2）选择“字符在范围中”，那么在“^”后会增加一对括号“[]”，当前插入点在括号中。括号在正则表达式中表示，文本中的字符匹配括号中任意一个字符即符合查找条件。
（3）按一下空格键，添加空格符。空格符是空行的一个组成成分。
（4）选择“制表符”，添加代表制表符的“\t”。
（5）移动光标，将当前插入点移到“]”之后，然后选择“匹配 0 次或更多”，该操作会添加星号字符“*”。星号表示，其前面的括号“[]”内的空格符或制表符，在一行中出现0个或多个。
（6）选择“换行符”，插入“\n”，表示回车符。
④、“替换为”组合框保持空，表示删除查找到的内容。单击“替换”按钮逐个行删除空行，或单击“全部替换”按钮删除全部空行（注意：EditPlus有时存在“全部替换”不能一次性完全删除空行的问题，可能是程序BUG，需要多按几次按钮）。

【6】软件技巧――键盘记录的注意事项
EditPlus 的键盘记录有些类似于 UltraEdit 的宏操作，不过功能相对单一，录制的文件可编辑性较差。
由于基本无法编辑录制的文件，所以录制的时候为了避免录制失败，推荐纯粹使用键盘操作，以下是比较关键的几个键盘组合：
Ctrl+F ＝ 调出查找对话框
Ctrl+H ＝ 调出替换对话框
Alt+F4 ＝ 关闭作用，比如，关闭查找对话框、关闭替换对话框，等等
其它键盘快捷键在“帮助－快捷键列表”里面可以很容易的查找到，这里就不细说了。

【7】软件技巧――关闭文档标签的便捷方法
右键单击文档标签工具条，弹出菜单中选择“标签选项”，选中“用鼠标中间的按钮关闭”，这里包括鼠标的滚轮。

【8】软件技巧――如何去掉 EditPlus 保存文本文件时的添加后缀提示？
如果你使用 EditPlus 进行文本编辑，那么每次创建文本文件，编辑后保存时，尽管文件类型下拉列表中显示的是文本文件， EditPlus 还是询问你是否添加".txt"后缀，是不是很烦？
解决方法:
① 在程序目录建立一个空的文件“template.txt”
② “工具－参数设置－模板”里面，单击“添加”按钮添加模板，“菜单文本”这里输入“Text”，浏览“template.txt”，之后确定即可
③ “文件－新建－text”，就可以建立一个空的文本文件，保存时，这个文件自动带有扩展名".txt"，也就避免了令人头疼的确认
④ 模板设置文件名称为“template.ini”，如果和主程序同一路径，可以使用相对路径
罗嗦了点，不过管用 
要自动创建带有某种后缀的文件，方法同上。

【9】软件技巧――提示找不到语法文件 *.stx 的解决办法
原因多为设置的语法文件不存在或者是路径设置不对。这是因为 EditPlus 的语法是设置文件采用的是绝对路径，而在你设置了语法文件之后，再把程序复制到其它目录，因而导致 EditPlus 无法找到该语法文件。
解决办法：
在主程序目录里，找到 Setting.ini 这是 EditPlus 存放语法的文件
查找后缀为“.stx”、“acp”的文本内容，或者查找带有驱动器符号的行，比如
Syntax file=C:\Program Files\EditPlus 2\cpp.stx
那么，就把”C:\Program Files\EditPlus 2\“替换成你当前软件的路径。
其它提示找不到文件的解决方法同上

【10】软件技巧――设置editplus支持其它文字，如韩文
在editplus里打开文件，出来打开文件对话框；然后点击“转换器”后面的那个省略号，会出来自定义转换器对话框；在右边选择你需要的编码方式，添加到左边，然后点确定；最后在下拉框中选择需要的编码方式，然后打开文件即可。

【11】软件技巧――FTP 上传的设置
“文件->远程操作->FTP 上传”在“设置”选项卡中设置好参数（“子目录”前面应该加“/”如“/web/”），点击“确定”回到“FTP 上传”选项卡，然后点击“上传”即可；“批量上传”的设置类似。

【12】软件技巧――如何禁用备份文件功能？
在“参数选择”的文件选项页，禁用“'保存时自动创建备份文件”选项

【13】软件技巧――添加语法文件、自动完成文件、以及剪辑库文件
要添加 *.STX（语法文件）或 *.ACP（自动完成文件）：
1. 选择“参数选择→语法”
2. 单击“添加”按钮，命名，在“扩展名”部分输入对应扩展名（不带“.”）
3. 浏览/输入 STX（语法文件部分） 以及 ACP（自动完成文件部分）。
添加剪辑库文件（*.CTL）
复制相应 *.CTL 文件到软件安装目录，重新启动 EditPlus ，则系统自动识别。作者主页有很多语法自动完成文件下载，地址
http://editplus.com/files.html

【14】工具集成――编译器集成例子（Java、Borland C++、Visual C++、Inno Setup、nsis）
在“工具→参数选择→用户工具”选项页设置，设置步骤
① 设置组名称，这里也可以不设置
② 单击“添加工具→应用程序”按钮并进行如下设置
③ 各种类似"$(FilePath)"的参数可以在文本框右侧的箭头下拉菜单中获取，具体含义如下
参数 描述
$(FilePath) 文件路径（文件全名，含目录和文件名）
$(FileDir) 文件目录（不带文件名）
$(FileName) 文件名（不带目录）
$(FileNameNoExt) 不带扩展名的文件名（不带目录）
$(FileExt) 扩展名（当前文件）
$(ProjectName) 工程名称（当前工程名）
$(CurLine) 当前行号（光标位置处的行号）
$(CurCol) 当前列号（光标位置处的列号）
$(CurSel) 当前文本（插入当前选定文本）
$(CurWord) 当前单词（插入当前单词）
$(WindowList) 显示当前窗口列表并选择特定文件


例子 1. Java 编译器

菜单文本：Java 编译器
命令：c:\java\bin\javac.exe
参数："$(FilePath)"
初始目录：$(FileDir)
捕获输出：开启

要运行已编译的 Java 类文件，你可以进行如下设置：
菜单文本：Java
命令：c:\java\bin\java.exe
参数：$(FileNameNoExt)
初始目录：$(FileDir)
“命令”部分应当替换为实际的 Java 解释器的路径。

例子 2. Borland C++

菜单文本：Borland C
命令：c:\bc\bin\bcc32.exe
参数：-Ic:\bc\include -Lc:\bc\lib -n$(FileDir) $(FilePath)
初始目录：c:\bc\bin
捕获输出：开启

例子 3. Visual C++

菜单文本：Visual C++
命令：c:\msdev\vc98\bin\cl.exe
参数："$(FilePath)"
初始目录：$(FileDir)
捕获输出：开启

例子 4. Inno Setup
菜单文本：编译 Inno
命令：C:\Program Files\Inno Setup 4\Compil32.exe”
参数：/cc $(FileName)
初始目录：$(FileDir)
捕获输出：开启

例子 5. nsis
菜单文本：编译 nsis
命令：C:\NSIS\makensis.exe
参数：$(FileName)
初始目录：$(FileDir)
捕获输出：开启

例子 6. C#
菜单文本：编译 C#
命令：C:\WINDOWS\Microsoft.NET\Framework\v1.0.3705\csc.exe
参数：$(FileName)
初始目录：$(FileDir)
捕获输出：开启

在上面设置中，在命令部分，必须使用系统中各自编译器的绝对路径。

设置完毕后，你可以在“工具”菜单运行对应工具了，运行结果会显示在底部的输出窗口，你也可以通过快捷键(Ctrl + 0-9) 运行，或者是通过“用户工具栏”的快捷按钮运行。

要运行已编译的 *.exe 文件，你可以进行如下设置（此时可执行文件需要和编译文件同名）：
菜单文本：Run
命令：$(FileNameNoExt)
参数：
初始目录：$(FileDir)

【15】工具集成―― 让Editplus调试PHP程序
1:打开Editplus，选择"工具->配置用户工具..."菜单。
2:在弹出的窗口中选择"添加工具->应用程序",给新程序起一个好记的名字，比如这里我们用"Debug PHP",在"菜单文本"中输入"Debug PHP"。点击"命令行"右边的按钮,找到你的php.exe所在的路径，例如这里是"c:\php\php.exe"。再点击"参数"右边的下拉按钮选择"文件路径",最后再把"捕获输出"前面的复选框选上。
3:现在测试一下，新建一个php文件，按快捷键Ctrl+1可以激活刚才我们设置的工具(如果你设置了多个工具,快捷键可能会有所不同),现在你可以看到它已经能正常工作了。但是还有一点不太理想:如果你的PHP程序出错,在输出窗口会提示你第几行出错 ,单击这一行提示,Editplus老是提示你找不到某某文件，是否新建。接下下我们要修正这个功能。
4:打开刚才用户工具设置窗口，找到刚才设置的"Debug PHP"工具。点击"捕获输出"复选框旁边的"输出模式"按钮,会弹出一个定义输出模式的窗体，把"使用默认输出模式"前面的复选框去掉, 在"正则表达式"这一项的文本框中输入" ^.+ in (.+) line ([0-9]+) "(不包括引号),细心的朋友可能会发现，这里使用的也正则表达式的语法。然后，在下面的"文件名"下拉菜单中选择"预设表达式 1"，即上边正则表达式中的第一个参数,"行"下拉菜单项选择"预设表达式 2"，"列"下拉项保持为空。然后保存设置。
5:好了，现在再来试一下吧，双击出错的行数，Editplus就会自动激活出错文件，并把光标定位到出错行,是不是特别方便呢?!
现在,Editplus经过我们的"改造",已经可以即时的调试PHP文件了，虽然还不是"可视化"界面的，但对于一些平常的小程序来查错还是非常好用的。Editplus真是不款不可多得的好工具，如果你有什么使用技巧，不要忘了大家一起分享哦。^O^

如果不能切换错误行号，请尝试作如下修改： （by aukw@CCF）
1.php.ini 中html_errors = Off打开
//如果你不打开，3.中的表达式要修改
2.参数改成：-q -f "$(FilePath)"
//不加"符号的话文件名有空格的文件调试失败。。
//-q不输出html头信息，你去掉也行，不过调试时候你一般用不到那些header信息
3." ^.+ in (.+) line ([0-9]+) " 改成 "^.+ in (.+) on line ([0-9]+)$"
//如果还是不行，请注意调试结果，自己修改表达式来取出文件名和行号

【16】工具集成――打造 PHP 调试环境(二)
1: 把剪辑库定位在 PHP4 Functions 上就可以在编辑时, 利用[插入]->[匹配剪辑]命令,就可以自动完成末输入完整的 PHP 函数(或直接按 F2 键)
2: 类似上面,在选择部分文字后,同样可以自动完成。(同 F2)
3: 在[参数选择]->[设置和语法]->PHP->自动完成, 选择目录下的 php.acp 文件,你可以定制自己的自动完成方式.
4: 想要即时预览文件,可在[参数选择]->[工具]->WEB 服务器中添加本地目录，(注意不要加 http:// , 应是一个有效的站点)。
　　　　如: 主机->localhost/php | 根目录->D:\php
主机->localhost/asp | 根目录->D:\asp
主机->localhost/cgi | 根目录->D:\cgi
完成设置后只要脚本文件位于这些目录下(子目录也没问题), 就能够正确解释.
5: 各种语法和模板文件可以在 http://editplus.com/files.html 获得，可根据需要选用和编辑。
6: Ctrl+F11 可显示当前文件中的函数列表.
7: 添加各种用户工具.如:
启动MYSQL服务器管理工具->C:\mysql\bin\winmysqladmin.exe
启动Apache服务器->C:\Apache\bin\Apache.exe -k start
启动Apache服务器->C:\Apache\bin\Apache.exe -k stop (shutdown)
8: DBG 附带有一个 prof_results.php 文件,可剖析 PHP 程序的性能.
虽不是真正的调试器,但已经够了.
OK! 经过改造后,是不是有点象一个 IDE  什么?还差点,没有即时帮助...看我的,再来:
9: 把 php_manual_en.chm (最好是扩展帮助手册)加入到用户工具中, 当遇到需要参考的关键字时, 把光标定位其上, 按下快捷键 Ctrl+1, 看到了吗.
在输入时有想不起来的函数名时, 先按照第 1 条的方法调出函数, 然后...怎么样?

以上有的是对于调试工具的设置，由于此类工具比较多，大家设置时参考以上的基本就差不多了，所以就不过多的列举了。

【17】在 WINPE 中集成 EDITPLUS 
可以基于目前的bartpe做得WINPE中，菜单使用nu2menu制作

默认位置为 \programs\editplus\
默认系统位置为光盘的 i386 目录

i386/system32 的 autorun.bat 中添加外壳集成（系统右键）
regedit /s %SystemDrive%\programs\editplus\REG.REG
regsvr32 /s \programs\editplus\EPPSHELL.DLL
（reg.reg保存了epp的工具栏信息，当然注册用户也可以放置注册信息）

复制editplus安装包里面的文件到programs\editplus\，注意，如果有setting.ini，删掉该文件，在nu2menu里面加入以下句子（可以根据需要安排位于特定菜单条目下）
<MITEM TYPE="ITEM" DISABLED="@Not(@FileExists(@GetProgramDrive()\Programs\EditPlus\editplus.exe))" CMD="RUN" 
FUNC="@GetProgramDrive()\Programs\EditPlus\editplus.exe">EditPlus 文本编辑</MITEM>

【18】支持带UTF-8标记/不带UTF-8标记的文件     Lei@DRL提出并测试
这里Byte Order Mark翻译为标记/文件头/标签

参数选择－文件－里面设置“支持不带有UTF-8文件头的UTF－8文件”，我这里翻译标签为UTF-8文件头，如果复选该项，应该是保存为不带标签的Utf-8，如果不复选，应该是保存成带有BOM的UTF-8。
这样就可以打开带签名的UTF-8文件，并且可以正常编辑，但是又不能打开不带签名的了，想要打开不带签名的还需要改回来...不过虽然有点麻烦，但是总算能用了

【19】建立文件关联，以便在资源管理器中双击打开对应语法文件

Editplus中可以设置各种语法，如果希望建立文件关联：
在“参数选择－语法”对话框中，选择一个语法，如C++，在下面的“语法设置”标签里面，选择“关联到资源管理器中”，以后双击对应文件后缀的时候，就会直接启用EditPlus打开了。

【20】特别应用，双击单词选择问题
比如对于下面文本，希望双击“1234”位置，就可以选择“1234”，而不是选择整行
ABCD-1234-EFGH-ACDE
软件默认是选择整行，这时可以自己进行设置，打开“参数选择”，在“常规”选项页的第三个选项里面（双击单词截止府），添加输入“-“，确认，以后就可以实现截止符之间的内容了


【21】在Editplus中使用CVS版本控制功能       sunbn@CCF
CVS是开放源代码的版本控制系统，CVS作为一个免费的优秀的版本管理工具被广泛的使用在许多的软件公司的软件配置管理过程中。
我们经常使用的CVS客户端是WinCVS，或者JBuilder/Eclipse内置的CVS功能。可是有时候编辑html文件、PHP/Perl文件或者Java文件的时候经常使用到轻便的编辑工具――Editplus2.x，往往编辑完了之后需要使用WinCVS再进行更新或者提交操作，来回切换程序窗口很是麻烦。如何让Editplus也能够方便的使用CVS功能呢，其实利用Edit plus的“User Tool”――“用户工具”功能就可以实现。其方便程度甚至快追上一些IDE了，而且经过测试，进行简单的CVS提交和更新动作比WinCVS要快一些。
在设置之前我们还是要安装WinCVS的客户端，因为要用到cvs.exe这个命令行工具完成我们的工作，安装好WinCVS之后，需要将WinCVS的安装路径写到系统的全局变量“Path”中，使系统可以找到cvs.exe这个可执行程序。或者在下面 的设置中指定cvs程序的绝对路径。
具体设置方法如下：
1、菜单中Tools>>Preference，在设置对话框选择“Files”，勾选“reload modified files automatically”，即自动载入被修改的文件。
2、菜单中Tools>>Configure User Tools，点击Group Name，将一个Group名称设置为CVS。
3、在“Group and tool items”下拉框中选择我们新建的CVS Group
4、点击“Add Tool >> ”按钮新增一个Tool并设置相关选项。
login的设置注意要取消掉“Capture Output”因为要在下面的弹出窗口中输入登录的密码。
我们可以在“Output Window”窗口看到以上工具执行的结果：
以上是抛砖引玉，希望能对大家有所帮助，其实在UltraEdit/Emedit等中也可以使用外部工具设置CVS的使用。
另外，需要注意的几点：
1。首先您所编辑的文件是处于CVS控制下的文件，即还是需要使用WinCVS来Checkout你的module(用cvs命令行也可)，在Editplus中也可以设置User Tools进行checkout，但是并不常用也不方便。
2。向CVS添加文件和从CVS删除文件也是可以放到User Tools中的，这个大家可以自己试着配置一下。

【22】EditPlus的移植与设置备份（更新）
由于系统右键集成可以在软件里面设置，Editplus可以算是一个绿色软件了，然而如果你已经对Editplus的语法进行了设置，把程序移动到其他目录以后，就会出错，这是因为他把语法文件的设置写成了绝对路径的形式，因此如果移植，就需要修改配置文件
打开程序目录里的“setting.ini”

把setting.ini里面带有绝对路径的改成移动后的路径，比如
Syntax file=C:\Program Files\Editplus 2\perl.stx
改成 
Syntax file=移植后主程序的路径\perl.stx

题外话，epp的设置很有趣味，单凭ini文件和注册表都不能全部备份，必须两者结合才行，所以备份程序设置的时候，不能顾此失彼。

如果希望备份epp的设置，备份程序目录下的
setting.ini
editplus.ini
还有其他你认为需要的ini文件，以及注册表的
HKEY_CURRENT_USER\SOFTWARE\ES-Computing
HKEY_LOCAL_MACHINE\SOFTWARE\ES-Computing
下面的内容，这样才算完整的备份下来了，为了方便，可以导出为注册表文件

【23】EditPlus原版安装程序的缺点以及自定义安装包
EditPlus的安装程序是使用zip格式打包的，安装程序是setup_ep.exe，这时你也可以使用WinRar进行打包，7-zip也可以，制作的安装包比用 Winrar 制作的少十几kb，不过要稍微处理一下
压缩成exe压缩包，添加下面注释：
Overwrite=1
tempmode
Silent=1
Setup=setup_ep.exe

这样就可以了，editplus 的setting.ini和editplus.ini存储了程序的一些选项，不过如果你尝试把他们加入压缩包进行安装，却会发现 EditPlus 的安装程序根本不会复制他们。问题出在安装程序 setup_ep.exe 上面，如果你用“点睛字符串替换”程序查找ASCII字符串，你会发现很多压缩包中的文件名，也就是说 setup_ep.exe 把文件名编译进去了，当然也就不会复制安装后来添加进取的任何文件和文件夹了。如果把查找出来的安装包里面不存在的文件名替换成你需要额外安装进去的文件名，比如把license-kr.txt替换成editplus.ini也就实现了配置的打包，Uninstall.lnk改为卸载软件.lnk，Online Manual.lnk改为联机帮助.lnk，实现了开始菜单的中文化

把注册表的
HKEY_CURRENT_USER\SOFTWARE\ES-Computing
HKEY_LOCAL_MACHINE\SOFTWARE\ES-Computing
两处导出为注册表文件，添加到压缩包中，例如取名 y.reg，最后的注释可以写为
Overwrite=1
tempmode
Silent=1
Setup=setup_ep.exe
setup=regedit /s y.reg

